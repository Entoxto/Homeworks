"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с
первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, a):
        self.a = a

    def __str__(self):
        ma = []
        result = ''
        for i in self.a:
            ma.append(max(i))
        for i in range(len(self.a)):
            for j in range(len(self.a[i])):
                result += f'{self.a[i][j]:{len(str(max(ma)))}d}   '
            result += '\n'
        return result

    def __add__(self, other):
        result = []
        for i in range(len(self.a)):
            numbers = []
            for j in range(len(self.a[0])):
                summa = other.a[i][j] + self.a[i][j]
                numbers.append(summa)
            result.append(numbers)
        return Matrix(result)


v1 = Matrix([[61, 1, 14],
             [1, 18, 1],
             [3, 1, 91]])

v2 = Matrix([[2, 31, 7],
             [1, 0, 7],
             [5, 4, 1]])

print(v1 + v2)
